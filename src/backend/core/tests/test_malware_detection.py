"""Test malware detection callback"""

import pytest
from lasuite.malware_detection.enums import ReportStatus

from core import factories
from core.malware_detection import malware_detection_callback
from core.models import ItemTypeChoices, ItemUploadStateChoices

pytestmark = pytest.mark.django_db


def test_malware_detection_callback_safe():
    """Test malware detection callback for safe file"""
    item = factories.ItemFactory(
        update_upload_state=ItemUploadStateChoices.ANALYZING,
        type=ItemTypeChoices.FILE,
        filename="test.txt",
    )
    malware_detection_callback(item.file_key, ReportStatus.SAFE, None, item_id=item.id)
    item.refresh_from_db()
    assert item.upload_state == ItemUploadStateChoices.READY


def test_malware_detection_callback_unsafe():
    """Test malware detection callback for unsafe file"""
    item = factories.ItemFactory(
        update_upload_state=ItemUploadStateChoices.ANALYZING,
        type=ItemTypeChoices.FILE,
        filename="test.txt",
    )
    malware_detection_callback(
        item.file_key,
        ReportStatus.UNSAFE,
        error_info={"error": "test", "error_code": 4001},
        item_id=item.id,
    )
    item.refresh_from_db()
    assert item.upload_state == ItemUploadStateChoices.SUSPICIOUS


def test_malware_detection_callback_file_too_large():
    """Test malware detection callback for file too large"""
    item = factories.ItemFactory(
        update_upload_state=ItemUploadStateChoices.ANALYZING,
        type=ItemTypeChoices.FILE,
        filename="test.txt",
    )
    malware_detection_callback(
        item.file_key,
        ReportStatus.UNKNOWN,
        error_info={"error": "test", "error_code": 413},
        item_id=item.id,
    )
    item.refresh_from_db()
    assert item.upload_state == ItemUploadStateChoices.FILE_TOO_LARGE_TO_ANALYZE


def test_malware_detection_callback_unknown_report_status():
    """Test malware detection callback for unknown report status.
    The file should be set to suspicious.
    """
    item = factories.ItemFactory(
        update_upload_state=ItemUploadStateChoices.ANALYZING,
        type=ItemTypeChoices.FILE,
        filename="test.txt",
    )
    malware_detection_callback(
        item.file_key,
        ReportStatus.UNKNOWN,
        error_info={},
        item_id=item.id,
    )
    item.refresh_from_db()
    assert item.upload_state == ItemUploadStateChoices.SUSPICIOUS
